#spring.profiles.active=dev

#spring data source config
datasource.primary.url=${BOND_PRIMARY_MYSQL_URL}
datasource.primary.user=${BOND_DM_MYSQL_USERNAME}
datasource.primary.password=${BOND_DM_MYSQL_PASSWORD}
datasource.primary.xa-data-source-class-name=com.mysql.jdbc.jdbc2.optional.MysqlXADataSource
datasource.primary.data-source-name=dmdb

datasource.secondary.url=${BOND_SECONDARY_MYSQL_URL}
datasource.secondary.user=${BOND_DM_MYSQL_USERNAME}
datasource.secondary.password=${BOND_DM_MYSQL_PASSWORD}
datasource.secondary.xa-data-source-class-name=com.mysql.jdbc.jdbc2.optional.MysqlXADataSource
datasource.secondary.data-source-name=innodealing

datasource.asbrs_p.URL=${BOND_ASBRS_P_URL}
datasource.asbrs_p.user=${BOND_ASBRS_P_USERNAME}
datasource.asbrs_p.password=${BOND_ASBRS_P_PASSWORD}
datasource.asbrs_p.xa-data-source-class-name=com.mysql.jdbc.jdbc2.optional.MysqlXADataSource
datasource.asbrs_p.data-source-name=asbrs

# Specify the DBMS
spring.jpa.database = MYSQL
# Show or not log for each sql query
spring.jpa.show-sql = true
# Hibernate ddl auto (create, create-drop, update)
#spring.jpa.hibernate.ddl-auto = update
# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy
# stripped before adding them to the entity manager)
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

# Number of ms to wait before throwing an exception if no connection is available.
#spring.datasource.max-wait=10
# Maximum number of active connections that can be allocated from this pool at the same time.
#spring.datasource.max-active=50
# Validate the connection before borrowing it from the pool.
#spring.datasource.test-on-borrow=false
#
spring.datasource.initialSize=10
spring.datasource.minIdle=5
spring.datasource.maxActive=150
#
spring.datasource.maxWait=60000
#
spring.datasource.timeBetweenEvictionRunsMillis=6000
spring.datasource.maximum-pool-size=300
spring.datasource.minEvictableIdleTimeMillis=3000
spring.datasource.validationQuery=SELECT 1
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false


# JTA atomikos config
spring.jta.enabled=true
spring.jta.log-dir=/home/logs/bond-service/
spring.jta.log-part1-filename=finance-atomikos.log
spring.jta.atomikos.datasource.test-query=select 1
spring.jta.atomikos.datasource.max-pool-size=300
spring.jta.atomikos.datasource.min-pool-size=50
spring.jta.atomikos.properties.serial-jta-transactions=true
spring.jta.atomikos.connectionfactory.ignore-session-transacted-flag=false
spring.jta.atomikos.connectionfactory.local-transaction-mode=true

#mongodb config
spring.data.mongodb.bond.database=${BOND_MONGO_DATABASE}
spring.data.mongodb.bond.uri=${BOND_MONGO_URI}
spring.data.mongodb.sentiment.database=${SENTIMENT_MONGO_DATABASE}
spring.data.mongodb.sentiment.uri=${SENTIMENT_MONGO_URI}

#AMQP
#rabbitmq
spring.rabbitmq.host=${BOND_MQ_HOST}
spring.rabbitmq.port=${BOND_MQ_PORT}
spring.rabbitmq.username=${BOND_MQ_USERNAME}
spring.rabbitmq.password=${BOND_MQ_PASSWORD}
#spring.rabbitmq.virtual-host=

# REDIS (RedisProperties)
spring.redis.database=0
spring.redis.host=${BOND_REDIS_HOST}
#spring.redis.password=
spring.redis.port=${BOND_REDIS_PORT}
spring.redis.pool.max-idle=50
spring.redis.pool.min-idle=5
spring.redis.pool.max-active=20
spring.redis.pool.max-wait=1000
spring.redis.timeout=1000
 #name of Redis server
#spring.redis.sentinel.master=
#spring.redis.sentinel.nodes=

#web servlet config
server.port=18080
server.tomcat.max-threads=1000

spring.jackson.time-zone=Asia/Shanghai

#logging
#currently we use sl4j,Sentry is a better choice,if we want to realtime log
#TRACE, DEBUG, INFO, WARN, ERROR, FATAL, OFF
#logging.level.org.springframework.web=DEBUG
#logging.level.org.hibernate=INFO
#logging.level.com.atomikos=ERROR
#logging.path=/home/logs/fbond-service
#logging.file=/home/logs/bond-service/bond-service.log
logging.config=classpath:logback.xml
#endpoints
#endpoints.sensitive=true
#endpoints.info.sensitive=false

#info.build.artifact=INNODEALING
#info.build.name=DM新债券
#info.build.description=DM债券-重构项目-WEB
#info.build.version=Version-201609301412-1.01

#file upload size  set

multipart.max-file-size=100MB
multipart.max-request-size=100MB

#pythonUrl congfig
config.define.pythonUrl = ${BOND_PYTHON_URL}

#bond guideprice url
#config.define.guidepriceUrl=http://192.168.14.153:20080/api/guideprice/dailydata
config.define.guidepriceUrl=${BOND_GUIDEPRICE_URL}

#xmpp配置
config.define.xmppHost = ${BOND_XMPP_HOST}

#用户许可定义:债券免费报价大厅
permission.code.bond.free=bond_basic
#用户许可定义:债券付费报价大厅
permission.code.bond.pay=bond_subscription
#导出报告权限
permission.code.bond.report=report_basic
#导出财务数据
permission.code.bond.finareport=report_finance

#config metaservice url
config.define.metaservice.accountUrl=https://${REST_SERVICE_HOST}/meta-service/account/dm/id
config.define.metaservice.permissionsUrl=https://${REST_SERVICE_HOST}/meta-service/user/id/crmId/permissions
config.define.BondCreditRatingGroup.queryUrl = http://${REST_SERVICE_HOST}/bond-institution/
config.define.queryUserOrgId = http://${REST_SERVICE_HOST}/meta-service/user/detail/id
config.define.metaservice.accountCrmIdUrl=http://${REST_SERVICE_HOST}/meta-service/account/crm/id

#ali oss
dmms.oss.endpoint = ${PUBLIC_OSS_URL_INTERNAL}
dmms.oss.accessKeyId = ${PUBLIC_OSS_ACCESSKEYID}
dmms.oss.accessKeySecret = ${PUBLIC_OSS_ACCESSKEYSECRET}
dmms.oss.bucketName = ${PUBLIC_OSS_BUCKETNAME}
